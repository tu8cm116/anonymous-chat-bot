import asyncio
import logging
import os
from datetime import datetime, timedelta

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

import database as db

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
logging.basicConfig(level=logging.INFO)
TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
menu_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üîé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")],
        [KeyboardButton("üö´ –ñ–∞–ª–æ–±–∞"), KeyboardButton("‚õî –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç")]
    ],
    resize_keyboard=True
)

# --- /start ---
@dp.message(CommandStart())
async def start_cmd(message: types.Message):
    await db.update_user(message.from_user.id, state="menu", partner_id=None, last_active=datetime.now())
    await message.answer("–ü—Ä–∏–≤–µ—Ç üëã\n–ù–∞–∂–º–∏ ¬´üîé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —á–∞—Ç.", reply_markup=menu_kb)

# --- –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ ---
@dp.message(F.text == "üîé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")
async def search_partner(message: types.Message):
    tg_id = message.from_user.id

    if await db.is_banned(tg_id):
        await message.answer("üö´ –¢—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        return

    await db.update_user(tg_id, state="searching", last_active=datetime.now())
    partner_id = await db.find_partner(tg_id)

    if partner_id:
        # –°–æ–µ–¥–∏–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await db.update_user(tg_id, state="chat", partner_id=partner_id)
        await db.update_user(partner_id, state="chat", partner_id=tg_id)
        await bot.send_message(partner_id, "üí¨ –ù–∞–π–¥–µ–Ω —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫! –ú–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å.", reply_markup=menu_kb)
        await message.answer("üí¨ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –ú–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å.", reply_markup=menu_kb)
    else:
        await message.answer("‚åõ –ò—â–µ–º —Ç–µ–±–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞... –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ.")

# --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞–º–∏ ---
@dp.message(F.text & ~F.text.in_({"üîé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞", "üö´ –ñ–∞–ª–æ–±–∞", "‚õî –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç"}))
async def relay_message(message: types.Message):
    user = await db.get_user(message.from_user.id)

    if not user or user["state"] != "chat" or not user["partner_id"]:
        await message.answer("–¢—ã —Å–µ–π—á–∞—Å –Ω–µ –≤ —á–∞—Ç–µ. –ù–∞–∂–º–∏ ¬´üîé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞¬ª.")
        return

    partner_id = user["partner_id"]
    if partner_id:
        await bot.send_message(partner_id, message.text)
        await db.update_user(message.from_user.id, last_active=datetime.now())
        await db.update_user(partner_id, last_active=datetime.now())

# --- –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç ---
@dp.message(F.text == "‚õî –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç")
async def end_chat(message: types.Message):
    user = await db.get_user(message.from_user.id)
    if user and user["partner_id"]:
        partner_id = user["partner_id"]
        await db.update_user(partner_id, state="menu", partner_id=None)
        await bot.send_message(partner_id, "‚ùå –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç.", reply_markup=menu_kb)

    await db.update_user(message.from_user.id, state="menu", partner_id=None)
    await message.answer("‚úÖ –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.", reply_markup=menu_kb)

# --- –ñ–∞–ª–æ–±–∞ ---
@dp.message(F.text == "üö´ –ñ–∞–ª–æ–±–∞")
async def report_partner(message: types.Message):
    user = await db.get_user(message.from_user.id)
    if not user or not user["partner_id"]:
        await message.answer("–¢—ã –Ω–µ –≤ —á–∞—Ç–µ, –∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–µ –Ω–∞ –∫–æ–≥–æ üòÖ")
        return

    partner_id = user["partner_id"]
    await db.add_report(message.from_user.id, partner_id)
    count = await db.get_reports_count(partner_id)

    if count >= 3:  # –±–∞–Ω –ø–æ—Å–ª–µ 3 –∂–∞–ª–æ–±
        await db.ban_user(partner_id, hours=24)
        await db.update_user(partner_id, state="menu", partner_id=None)
        await bot.send_message(partner_id, "üö´ –¢—ã –ø–æ–ª—É—á–∏–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∂–∞–ª–æ–± –∏ –±—ã–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ 24 —á–∞—Å–∞.")
        await bot.send_message(message.from_user.id, "‚úÖ –ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    else:
        await bot.send_message(message.from_user.id, "‚úÖ –ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å.")
        await bot.send_message(partner_id, "‚ö†Ô∏è –ù–∞ —Ç–µ–±—è –ø–æ—Å—Ç—É–ø–∏–ª–∞ –∂–∞–ª–æ–±–∞. –°–æ–±–ª—é–¥–∞–π –ø—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è.")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º —á–∞—Ç –ø–æ—Å–ª–µ –∂–∞–ª–æ–±—ã
    await db.update_user(message.from_user.id, state="menu", partner_id=None)
    await db.update_user(partner_id, state="menu", partner_id=None)

# --- /stats ---
@dp.message(Command("stats"))
async def stats_cmd(message: types.Message):
    total_users, active_chats, total_reports = await db.get_stats()
    await message.answer(
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"üí¨ –ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: {active_chats}\n"
        f"üö® –ñ–∞–ª–æ–±: {total_reports}"
    )

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await db.init_db()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
